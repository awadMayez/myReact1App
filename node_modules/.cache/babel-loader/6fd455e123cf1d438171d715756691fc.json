{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mayez/React/todo/src/components/Item/Item.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport styles from './Item.module.css';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nexport default function Item() {\n  _s();\n\n  const [value, isDone] = React.useState({\n    checkedB: true\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormGroup, {\n    row: true,\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: state.checkedB,\n        onChange: handleChange,\n        name: \"checkedB\",\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this),\n      label: \"Primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), \"const Item = (\", (value, isDone), \") => (\", /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classnames({\n        [styles.item]: true,\n        [styles.done]: isDone\n      }),\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 40\n    }, this), \");\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Item, \"1E/HGJMDR1cSpG5EYElbxYm8U1s=\");\n\n_c = Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"sources":["/Users/mayez/React/todo/src/components/Item/Item.js"],"names":["React","classnames","styles","FormControlLabel","Checkbox","CheckBoxOutlineBlankIcon","CheckBoxIcon","Item","value","isDone","useState","checkedB","handleChange","event","setState","state","target","name","checked","item","done"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,wBAAP,MAAqC,yCAArC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,MAAR,IAAkBT,KAAK,CAACU,QAAN,CAAe;AACnCC,IAAAA,QAAQ,EAAE;AADyB,GAAf,CAAxB;;AAGA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BC,IAAAA,QAAQ,CAAC,EAAE,GAAGC,KAAL;AAAY,OAACF,KAAK,CAACG,MAAN,CAAaC,IAAd,GAAqBJ,KAAK,CAACG,MAAN,CAAaE;AAA9C,KAAD,CAAR;AACH,GAFD;;AAGJ,sBACI,QAAC,SAAD;AAAW,IAAA,GAAG,MAAd;AAAA,4BACI,QAAC,gBAAD;AACI,MAAA,OAAO,eACH,QAAC,QAAD;AACI,QAAA,OAAO,EAAEH,KAAK,CAACJ,QADnB;AAEI,QAAA,QAAQ,EAAEC,YAFd;AAGI,QAAA,IAAI,EAAC,UAHT;AAII,QAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,cAFR;AASI,MAAA,KAAK,EAAC;AATV;AAAA;AAAA;AAAA;AAAA,YADJ,qBAYeJ,KAAK,EAAEC,MAZtB,0BAYmC;AAAM,MAAA,SAAS,EAC9CR,UAAU,CAAC;AACP,SAACC,MAAM,CAACiB,IAAR,GAAe,IADR;AAEP,SAACjB,MAAM,CAACkB,IAAR,GAAeX;AAFR,OAAD,CADqB;AAAA,gBAMlCD;AANkC;AAAA;AAAA;AAAA;AAAA,YAZnC;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBC;;GA9BuBD,I;;KAAAA,I","sourcesContent":["import React from 'react';\r\nimport classnames from 'classnames';\r\nimport styles from './Item.module.css'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nexport default function Item() {\r\n    const [value, isDone] = React.useState({\r\n        checkedB: true\r\n    });\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\nreturn(\r\n    <FormGroup row>\r\n        <FormControlLabel\r\n            control={\r\n                <Checkbox\r\n                    checked={state.checkedB}\r\n                    onChange={handleChange}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                />\r\n            }\r\n            label=\"Primary\"\r\n        />\r\n    const Item = ({value, isDone}) => (<span className={\r\n        classnames({\r\n            [styles.item]: true,\r\n            [styles.done]: isDone\r\n        })\r\n    }>\r\n    {value}\r\n</span>);\r\n        </FormGroup>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}