{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mayez/React/todo/src/components/Item/Item.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport styles from './Item.module.css';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\n\nfunction CheckboxLabels() {\n  _s();\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormGroup, {\n    row: true,\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: state.checkedA,\n        onChange: handleChange,\n        name: \"checkedA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 26\n      }, this),\n      label: \"Secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: state.checkedB,\n        onChange: handleChange,\n        name: \"checkedB\",\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this),\n      label: \"Primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CheckboxLabels, \"ZIpOoIkY+zNoukQ3FRhmDXKNWw4=\");\n\n_c = CheckboxLabels;\n\nconst Item = ({\n  value,\n  isDone\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n    defaultChecked: true,\n    color: \"primary\",\n    inputProps: {\n      'aria-label': 'secondary checkbox'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 11\n  }, this), value, /*#__PURE__*/_jsxDEV(Checkbox, {\n    defaultChecked: true,\n    indeterminate: true,\n    inputProps: {\n      'aria-label': 'indeterminate checkbox'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 37\n}, this);\n\n_c2 = Item;\nexport default Item;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CheckboxLabels\");\n$RefreshReg$(_c2, \"Item\");","map":{"version":3,"sources":["/Users/mayez/React/todo/src/components/Item/Item.js"],"names":["React","classnames","styles","FormControlLabel","Checkbox","FormGroup","CheckboxLabels","state","setState","useState","checkedA","checkedB","handleChange","event","target","name","checked","Item","value","isDone"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,QAAN,CAAe;AACrCC,IAAAA,QAAQ,EAAE,IAD2B;AAErCC,IAAAA,QAAQ,EAAE;AAF2B,GAAf,CAA1B;;AAKA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BL,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACM,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAA9C,KAAD,CAAR;AACH,GAFD;;AAIA,sBACI,QAAC,SAAD;AAAW,IAAA,GAAG,MAAd;AAAA,4BACI,QAAC,gBAAD;AACI,MAAA,OAAO,eAAE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAET,KAAK,CAACG,QAAzB;AAAmC,QAAA,QAAQ,EAAEE,YAA7C;AAA2D,QAAA,IAAI,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA,cADb;AAEI,MAAA,KAAK,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,gBAAD;AACI,MAAA,OAAO,eACH,QAAC,QAAD;AACI,QAAA,OAAO,EAAEL,KAAK,CAACI,QADnB;AAEI,QAAA,QAAQ,EAAEC,YAFd;AAGI,QAAA,IAAI,EAAC,UAHT;AAII,QAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,cAFR;AASI,MAAA,KAAK,EAAC;AATV;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GA9BQN,c;;KAAAA,c;;AA+BT,MAAMW,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,kBAAuB;AAAA,0BAC1B,QAAC,QAAD;AACI,IAAA,cAAc,MADlB;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB;AAHhB;AAAA;AAAA;AAAA;AAAA,UAD0B,EAM/BD,KAN+B,eAOhC,QAAC,QAAD;AACI,IAAA,cAAc,MADlB;AAEI,IAAA,aAAa,MAFjB;AAGI,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB;AAHhB;AAAA;AAAA;AAAA;AAAA,UAPgC;AAAA;AAAA;AAAA;AAAA;AAAA,QAApC;;MAAMD,I;AAaN,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport classnames from 'classnames';\r\nimport styles from './Item.module.css'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nfunction CheckboxLabels() {\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    return (\r\n        <FormGroup row>\r\n            <FormControlLabel\r\n                control={<Checkbox checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\r\n                label=\"Secondary\"\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        checked={state.checkedB}\r\n                        onChange={handleChange}\r\n                        name=\"checkedB\"\r\n                        color=\"primary\"\r\n                    />\r\n                }\r\n                label=\"Primary\"\r\n            />\r\n\r\n        </FormGroup>\r\n    );\r\n}\r\nconst Item = ({ value, isDone}) => (<span>\r\n          <Checkbox\r\n              defaultChecked\r\n              color=\"primary\"\r\n              inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n          />\r\n    {value}\r\n    <Checkbox\r\n        defaultChecked\r\n        indeterminate\r\n        inputProps={{ 'aria-label': 'indeterminate checkbox' }}\r\n    />\r\n</span>);\r\nexport default Item;"]},"metadata":{},"sourceType":"module"}